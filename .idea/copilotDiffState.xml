<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/features/init/domain/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/features/init/domain/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.custom.kotlin.library)&#10;}&#10;&#10;dependencies {&#10;    implementation(project(&quot;:core:essentials&quot;))&#10;    // Use the version catalog alias for javax.inject (keeps versions centralized)&#10;    implementation(libs.javax.inject)&#10;}" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.custom.kotlin.library)&#10;}&#10;&#10;dependencies {&#10;    implementation(project(&quot;:core:essentials&quot;))&#10;    // Use the version catalog alias for javax.inject (keeps versions centralized)&#10;    implementation(libs.javax.inject)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/features/init/domain/src/main/java/com/uandcode/messenger/features/init/domain/isAuthorizedUseCase.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/features/init/domain/src/main/java/com/uandcode/messenger/features/init/domain/isAuthorizedUseCase.kt" />
              <option name="originalContent" value="package com.uandcode.messenger.features.init.domain&#10;&#10;import com.uandcode.messenger.core.essentials.exceptions.ConnectionException&#10;import kotlinx.coroutines.delay&#10;import javax.inject.Inject&#10;&#10;// todo!&#10;class IsAuthorizedUseCase @Inject constructor() {&#10;    suspend fun invoke(): Boolean {&#10;        delay(2000)&#10;        throw ConnectionException()&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.uandcode.messenger.features.init.domain&#10;&#10;import com.uandcode.messenger.core.essentials.exceptions.ConnectionException&#10;import kotlinx.coroutines.delay&#10;import javax.inject.Inject&#10;&#10;// todo!&#10;class IsAuthorizedUseCase @Inject constructor() {&#10;    suspend fun invoke(): Boolean {&#10;        delay(2000)&#10;        throw ConnectionException()&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>